openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8443
  description: Generated server url
paths:
  /api/materials/{id}:
    put:
      tags:
      - material-controller-api
      operationId: UpdateMaterial
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Material_MaterialBasic'
    delete:
      tags:
      - material-controller-api
      operationId: deleteMaterial
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Material_MaterialBasic'
  /api/courses/{id}:
    put:
      tags:
      - admin-course-controller-api
      operationId: replacePost
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course_CourseBasic'
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Course_CourseBasic'
    delete:
      tags:
      - admin-course-controller-api
      operationId: deleteCourse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Course_CourseBasic'
  /api/admin/users/{idUser}/course/{idCourse}:
    put:
      tags:
      - admin-user-controller-api
      operationId: addUserToCourse
      parameters:
      - name: idUser
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: idCourse
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User_UserBasic'
    delete:
      tags:
      - admin-user-controller-api
      operationId: deleteUserFromCourse
      parameters:
      - name: idUser
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: idCourse
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User_UserBasic'
  /api/posts/{id}/image:
    get:
      tags:
      - post-controller-api
      operationId: downloadImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - post-controller-api
      operationId: uploadImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/posts/:
    get:
      tags:
      - post-controller-api
      operationId: getEntries
      parameters:
      - name: Page
        in: query
        description: number of the page you want to get
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post_PostBasic'
    post:
      tags:
      - post-controller-api
      operationId: addPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Post'
  /api/materials/{id}/file:
    post:
      tags:
      - material-controller-api
      operationId: uploadFile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                multipartFile:
                  type: string
                  format: binary
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/materials/:
    get:
      tags:
      - material-controller-api
      operationId: getMaterials
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Material_MaterialBasic'
    post:
      tags:
      - material-controller-api
      operationId: addMaterials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material_MaterialBasic'
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Material_MaterialBasic'
  /api/courses/{id}/image:
    get:
      tags:
      - admin-course-controller-api
      operationId: downloadImage_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - admin-course-controller-api
      operationId: uploadImage_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/courses/:
    get:
      tags:
      - admin-course-controller-api
      operationId: getCourse
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course_CourseBasic'
    post:
      tags:
      - admin-course-controller-api
      operationId: addCourse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course_CourseBasic'
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Course_CourseBasic'
  /api/comments/:
    get:
      tags:
      - comment-controller-api
      operationId: getComments
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment_CommentBasic'
    post:
      tags:
      - comment-controller-api
      operationId: addComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment_CommentBasic'
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment_CommentBasic'
  /api/auth/refresh:
    post:
      tags:
      - login-controller-api
      operationId: refreshToken
      parameters:
      - name: refreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/auth/logout:
    post:
      tags:
      - login-controller-api
      operationId: logOut
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/auth/login:
    post:
      tags:
      - login-controller-api
      operationId: login
      parameters:
      - name: accessToken
        in: cookie
        required: false
        schema:
          type: string
      - name: refreshToken
        in: cookie
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/admin/users/{id}/image:
    get:
      tags:
      - admin-user-controller-api
      operationId: downloadImage_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - admin-user-controller-api
      operationId: uploadImage_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/admin/users/:
    get:
      tags:
      - admin-user-controller-api
      operationId: getUsers
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User_UserBasic'
    post:
      tags:
      - admin-user-controller-api
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User_UserBasic'
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User_UserBasic'
  /api/posts/{id}:
    get:
      tags:
      - post-controller-api
      operationId: getPost
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Post_PostBasic'
  /api/materials/recommendations:
    get:
      tags:
      - material-controller-api
      operationId: materialRecomendations
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Material_MaterialBasic'
  /api/materials/graph:
    get:
      tags:
      - material-controller-api
      operationId: materialGraph
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User_NumberMaterial'
  /api/admin/users/{id}:
    delete:
      tags:
      - admin-user-controller-api
      operationId: deletePost
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User_UserBasic'
components:
  schemas:
    Material_MaterialBasic:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Course_CourseBasic:
      type: object
      properties:
        id:
          type: integer
          format: int64
        category:
          type: string
        ageStart:
          type: integer
          format: int32
        ageEnd:
          type: integer
          format: int32
        instructor:
          type: string
        students:
          type: array
          items:
            $ref: '#/components/schemas/User_CourseBasic'
        price:
          type: integer
          format: int32
    User_CourseBasic:
      type: object
    Course_UserBasic:
      type: object
    User_UserBasic:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        name:
          type: string
        password:
          type: string
        rol:
          type: string
        numberMaterial:
          type: integer
          format: int32
        course:
          $ref: '#/components/schemas/Course_UserBasic'
    Post:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
    Comment_CommentBasic:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        comment:
          type: string
        commment:
          type: string
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Post_PostBasic:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
    User_NumberMaterial:
      type: object
      properties:
        name:
          type: string
        numberMaterial:
          type: integer
          format: int32
